/* -*-c++-*- */
/* osgEarth - Geospatial SDK for OpenSceneGraph
 * Copyright 2008-2012 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef OSGEARTH_METRICS_H
#define OSGEARTH_METRICS_H 1

#ifdef OSGEARTH_PROFILING
 
#define TRACY_ENABLE
#define TRACY_ON_DEMAND
#include <Tracy.hpp>

#define OE_PROFILING_ZONE ZoneScoped
#define OE_PROFILING_ZONE_NAMED(functionName) ZoneScopedN(functionName)
#define OE_PROFILING_ZONE_TEXT(text) _zoneSetText(___tracy_scoped_zone, text)
#define OE_PROFILING_PLOT(name, value) TracyPlot(name, value)
#define OE_PROFILING_FRAME_MARK FrameMark

inline void _zoneSetText(tracy::ScopedZone& zone, const char* text) {
    zone.Text(text, strlen(text));
}
inline void _zoneSetText(tracy::ScopedZone& zone, const std::string& text) {
    zone.Text(text.c_str(), text.size());
}
#else
#define OE_PROFILING_ZONE
#define OE_PROFILING_ZONE_NAMED(functionName)
#define OE_PROFILING_ZONE_TEXT(text)
#define OE_PROFILING_PLOT(name, value)
#define OE_PROFILING_FRAME_MARK
#endif


#include <osgEarth/Common>
#include <osgEarth/Config>
#include <iostream>
#include <osgDB/fstream>



// forward
namespace osgViewer {
    class Viewer;
}

namespace osgEarth {
    namespace Util
    {
        class OSGEARTH_EXPORT Metrics
        {
        public:
            /**
             * Convenience function to run the OSG frame loop with metrics.
             */
            static int run(osgViewer::Viewer& viewer);
        };
    }
}

#endif
